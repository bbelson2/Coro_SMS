@INPROCEEDINGS{4797078, 
author={Y. XiangMin and W. WenYong and X. Yu}, 
booktitle={2009 WRI International Conference on Communications and Mobile Computing}, 
title={An IPv6 Wireless Sensor Network Node-TaraxNode}, 
year={2009}, 
volume={2}, 
pages={9-14}, 
abstract={This paper presents the IPv6 wireless sensor network platform system TaraxNode. It is designed and implemented with independent intellectual property rights. For effectively monitoring, we developed TaraxOS, which includes a cluster-based self-organized multi-hop routing protocol. It is a multi-task, high-powered, low energy-consumed operating system for sensor nodes. TaraxNode containing heterogeneous elements provides numerous benefits at the traditional intelligent monitor system. It is mainly composed of a low power consumed MCU TaraxCore and WSN data acquired unit etc. When applied at the central air-condition intelligent monitor and control system, it gives excellent result.}, 
keywords={computerised monitoring;industrial property;intelligent sensors;operating systems (computers);routing protocols;wireless sensor networks;IPv6;TaraxNode;TaraxOS;central air-condition intelligent monitor;cluster-based self-organized multihop routing protocol;control system;intellectual property rights;intelligent monitor system;operating system;sensor nodes;wireless sensor network node;Centralized control;Intellectual property;Intelligent control;Intelligent sensors;Intelligent systems;Monitoring;Operating systems;Routing protocols;Sensor systems;Wireless sensor networks}, 
doi={10.1109/CMC.2009.111}, 
month={Jan},}
@INPROCEEDINGS{6690509, 
author={A. V. Brito and A. V. Negreiros and C. Roth and O. Sander and J. Becker}, 
booktitle={2013 IEEE/ACM 17th International Symposium on Distributed Simulation and Real Time Applications}, 
title={Development and Evaluation of Distributed Simulation of Embedded Systems Using Ptolemy and HLA}, 
year={2013}, 
pages={189-196}, 
abstract={Nowadays, embedded systems have a huge amount of computational power and consequently, high complexity. It is quite usual to find different applications being executed in embedded systems. Embedded system design demands for method and tools that allow the simulation and verification in an efficient and practical way. This paper proposes the development and evaluation of a solution for embedded modeling and simulation of heterogeneous Models of Computation (MoCs) in a distributed way by the integration of Ptolemy II and the High Level Architecture (HLA), a middleware for distributed discrete event simulation, in order to create an environment with high-performance execution of large-scale heterogeneous models. Experimental results demonstrate, that the use of a non distributed simulation for some situations can be infeasible, as well as the use of distributed simulation with few machines, like one, two or three computers. It was demonstrated that a speedup of factor 4 was acquired when a model with 4,000 thousands actors were distributed in 8 different machines.}, 
keywords={discrete event simulation;embedded systems;middleware;HLA;MoC;Ptolemy II;computational power;distributed discrete event simulation;embedded modeling and simulation;embedded systems;heterogeneous models of computation;high level architecture;high-performance execution;large-scale heterogeneous models;middleware;nondistributed simulation;Computational modeling;Computer architecture;Embedded systems;Ports (Computers);Sensors;Unified modeling language;Wireless sensor networks;Distributed Simulation;Embedded Systems;Heterogeneous Simulation}, 
doi={10.1109/DS-RT.2013.28}, 
ISSN={1550-6525}, 
month={Oct},}
@INPROCEEDINGS{5302678, 
author={W. h. Wang and Y. l. Cui and T. m. Chen}, 
booktitle={2009 5th International Conference on Wireless Communications, Networking and Mobile Computing}, 
title={Identity-Based Authentication Protocol with Paring of Tate on WSN}, 
year={2009}, 
pages={1-4}, 
abstract={Identity cryptography is widely used in security authentication. This paper proposes a standard identity-based authentication scheme, and also proves the security of the scheme under passive attack. On the basis of ECC and bilinear maps, paper implements the authentication protocol in the platform of TinyOs. Finally, paper analyzes its result and proves its feasibility.}, 
keywords={cryptographic protocols;message authentication;telecommunication security;wireless sensor networks;TinyOs platform;WSN;cryptography;identity-based authentication protocols;security authentication;wireless sensor networks;Application software;Authentication;Cryptographic protocols;Electronic mail;Elliptic curve cryptography;Hardware;Identity-based encryption;Public key cryptography;Security;Wireless sensor networks}, 
doi={10.1109/WICOM.2009.5302678}, 
ISSN={2161-9646}, 
month={Sept},}
@INPROCEEDINGS{6651023, 
author={A. Branco and A. L. d. Moura and N. Rodriguez and S. Rossetto}, 
booktitle={2013 IEEE International Symposium on Parallel Distributed Processing, Workshops and Phd Forum}, 
title={Teaching Concurrent and Distributed Computing -- Initiatives in Rio de Janeiro}, 
year={2013}, 
pages={1318-1323}, 
abstract={In this paper we describe two ongoing initiatives for teaching concurrency and distribution in PUC-Rio and UFRJ. One of them is a new approach for teaching distributed systems. Conventional distributed system courses follow a syllabus in which a list of topics is discussed independently and at different levels of abstractions. In Edupar'2012, we proposed a course with a novel approach, using a wireless sensor network environment to pin all topics down to concrete applications and to maintain issues such as fault tolerance and coordination continuously present. The second initiative is a smaller one, in which we insert a new topic in a Systems Software course to allow students to have a better understanding of what is application-level multitasking and of how it can be implemented. In this paper, we report on the experience of teaching the proposed syllabus and the adjustments that were necessary. We also discuss some plans for the courses in 2013.}, 
keywords={concurrency control;distributed processing;teaching;wireless sensor networks;application-level multitasking;concurrent computing;distributed computing;systems software course;teaching;wireless sensor network environment;Education;Fault tolerance;Fault tolerant systems;Materials;Programming;Proposals;Wireless sensor networks;application-level multitasking;coroutines;cross-cutting approaches;event-based programming;fault tolerance}, 
doi={10.1109/IPDPSW.2013.33}, 
month={May},}
@INPROCEEDINGS{7336328, 
author={D. Yunge and P. Kindt and M. Balszun and S. Chakraborty}, 
booktitle={2015 IEEE 17th International Conference on High Performance Computing and Communications, 2015 IEEE 7th International Symposium on Cyberspace Safety and Security, and 2015 IEEE 12th International Conference on Embedded Software and Systems}, 
title={Hybrid Apps: Apps for the Internet of Things}, 
year={2015}, 
pages={1175-1180}, 
abstract={Smartphones have become popular mainly because of the large variety of applications they can run. In contrast, most devices in the phone's environment - e.g., household appliances or environmental sensors - are much less flexible because their functionality is hardcoded at the design time. In order to realize the vision of the Internet of Things (IoT), where all devices communicate with each other to realize joint tasks, it is necessary that these devices are able to extend and adapt their functionalities on-the-fly based on their surrounding. To realize smart functionalities for IoT devices, we propose "hybrid Apps", the concept of Smartphone "Apps" applied to small embedded systems. In contrast with current packaged "smart home" solutions, where all appliances have to be changed to their smart counterparts at the same time, hybrid Apps permit an incremental and hence feasible deployment of the IoT vision. In this paper we discuss the challenges and opportunities associated with this approach. We argue code interpretation as a candidate reprogramming method for IoT devices and analyzed its feasibility with real-world measurements of key parameters such as computational and energy overhead. While in general, code interpretation incurs a large energy-overhead, we show that for typical IoT applications executed every few seconds, it is as low as 1%.}, 
keywords={Internet of Things;embedded systems;home computing;smart phones;Internet of Things;IoT applications;IoT devices;candidate reprogramming method;code interpretation;embedded systems;energy-overhead;hybrid apps;packaged smart home solutions;smartphone apps;Hardware;Java;Middleware;Protocols;Random access memory;Temperature sensors;Apps;Code Interpreter;Reprogrammability;Virtual Machines;Wireless Sensor Networks}, 
doi={10.1109/HPCC-CSS-ICESS.2015.292}, 
month={Aug},}
@INPROCEEDINGS{7983156, 
author={U. A. Noman and B. Negash and A. M. Rahmani and P. Liljeberg and H. Tenhunen}, 
booktitle={2017 14th IEEE Annual Consumer Communications Networking Conference (CCNC)}, 
title={From threads to events: Adapting a lightweight middleware for Contiki OS}, 
year={2017}, 
pages={486-491}, 
abstract={Interoperability is one of the key requirements in the Internet of Things considering the diverse platforms, communication standards and specifications available today. Inherent resource constraints in the majority of IoT devices makes it very difficult to use existing solutions for interoperability, thus demanding new approaches. This paper presents the process of adapting a lightweight interoperability middleware for IoT, LISA, from RIOT to Contiki OS and evaluates memory and power overheads. The middleware follows a service oriented architecture and classifies devices according to available resources to assign different roles, such as Application, Service and Manager Nodes. These roles live in different tiers in a generic IoT architecture, where the Manager nodes are located in the intermediate Fog layer. To adapt to an event based kernel of Contiki, the middleware defines and handles a set of events that are used to communicate with the user application. A network of nodes is simulated to show the architecture promoted by the middleware and the results are presented.}, 
keywords={Internet of Things;middleware;open systems;operating systems (computers);service-oriented architecture;Contiki OS;IoT architecture;IoT devices;LISA;RIOT;event based kernel;intermediate fog layer;lightweight interoperability middleware;manager nodes;memory overheads;power overheads;resource constraints;Internet of Things;Interoperability;Manganese;Message systems;Middleware;Protocols;Semantics;Contiki;Internet of Things;Interoperability;LISA}, 
doi={10.1109/CCNC.2017.7983156}, 
month={Jan},}
@INPROCEEDINGS{6825342, 
author={A. V. Brito and A. V. Negreiros}, 
booktitle={2013 III Brazilian Symposium on Computing Systems Engineering}, 
title={Allowing Large-Scale Systems Evaluation with Ptolemy through Distributed Simulation}, 
year={2013}, 
pages={53-58}, 
abstract={Nowadays, embedded systems have a huge amount of computational power and consequently, high complexity. It is quite usual to find different applications being executed in embedded systems. Embedded system design demands for method and tools that allow the simulation and verification in an efficient and practical way. This paper proposes the development and evaluation of a solution for embedded modeling and simulation of embedded systems in a distributed way by the integration of Ptolemy II and the High Level Architecture (HLA), in order to create an environment with high-performance execution of large-scale models. Experimental results demonstrated that the use of a non distributed simulation for some situations can be infeasible. It was demonstrated that a speedup of factor 4 was acquired when a model with 4,000 thousands actors were distributed in 8 different machines. It also presented a model of execution of each CPU core during the simulation.}, 
keywords={digital simulation;embedded systems;telecommunication computing;wireless sensor networks;CPU core;HLA;Ptolemy II;embedded modeling;embedded simulation;embedded system design;high level architecture;high-performance execution;large-scale models;large-scale systems evaluation;nondistributed simulation;wireless sensor network;Computational modeling;Computer architecture;Embedded systems;Graphics;Unified modeling language;Wireless sensor networks;Distributed Simulation;Embedded Systems;Heterogeneous Simulation}, 
doi={10.1109/SBESC.2013.19}, 
ISSN={2324-7886}, 
month={Dec},}
@INPROCEEDINGS{4678868, 
author={M. Yu and S. Xiahou and X. Li}, 
booktitle={2008 4th International Conference on Wireless Communications, Networking and Mobile Computing}, 
title={A Survey of Studying on Task Scheduling Mechanism for TinyOS}, 
year={2008}, 
pages={1-4}, 
abstract={Although TinyOS has been regarded as the defacto standard for WSN (Wireless Sensor Network) applications, its simple task scheduling mechanism became a great obstacle to WSN applications. This paper, from two directions (one based on cooperative, the other based on preemptive), presented a variety of scheduling algorithms and their application in TinyOS. And their characters and advantage were discussed as well in terms of energy consuming, tasks executing efficiency. Then a new, integrated and adaptive task scheduling mechanism was pointed out for the future TinyOS task scheduling. This new scheduling mechanism was characterized with features of dynamical adaptability and context-awareness.}, 
keywords={scheduling;wireless sensor networks;TinyOS;task scheduling mechanism;wireless sensor network;Adaptive scheduling;Computer languages;Context;Dynamic scheduling;Mobile communication;Mobile computing;Processor scheduling;Scheduling algorithm;Sensor systems and applications;Wireless sensor networks}, 
doi={10.1109/WiCom.2008.960}, 
ISSN={2161-9646}, 
month={Oct},}
@ARTICLE{6472115, 
author={M. T. Lazarescu}, 
journal={IEEE Journal on Emerging and Selected Topics in Circuits and Systems}, 
title={Design of a WSN Platform for Long-Term Environmental Monitoring for IoT Applications}, 
year={2013}, 
volume={3}, 
number={1}, 
pages={45-54}, 
abstract={The Internet of Things (IoT) provides a virtual view, via the Internet Protocol, to a huge variety of real life objects, ranging from a car, to a teacup, to a building, to trees in a forest. Its appeal is the ubiquitous generalized access to the status and location of any “thing” we may be interested in. Wireless sensor networks (WSN) are well suited for long-term environmental data acquisition for IoT representation. This paper presents the functional design and implementation of a complete WSN platform that can be used for a range of long-term environmental monitoring IoT applications. The application requirements for low cost, high number of sensors, fast deployment, long lifetime, low maintenance, and high quality of service are considered in the specification and design of the platform and of all its components. Low-effort platform reuse is also considered starting from the specifications and at all design levels for a wide array of related monitoring applications.}, 
keywords={IP networks;Internet of Things;data acquisition;environmental monitoring (geophysics);environmental science computing;quality of service;sensor placement;telecommunication network reliability;wireless sensor networks;Internet Protocol;Internet-of-Things;IoT application;IoT representation;WSN platform;functional design;long-term environmental data acquisition;long-term environmental monitoring;network lifetime;quality of service;sensor deployment;ubiquitous generalized access;wireless sensor networks;Internet of Things (IoT);IoT applications;WSN optimized design;WSN platform;WSN protocol;long term environmental monitoring applications;wireless sensor networks (WSN)}, 
doi={10.1109/JETCAS.2013.2243032}, 
ISSN={2156-3357}, 
month={March},}
@INPROCEEDINGS{4340471, 
author={M. Yao and X. Zhu}, 
booktitle={2007 International Conference on Wireless Communications, Networking and Mobile Computing}, 
title={Study and Transplant of Operating System for Wireless Sensor Network Node}, 
year={2007}, 
pages={2803-2807}, 
abstract={This paper studies the embedded operating system TinyOS, including its event-driven mechanism, schedule strategy mechanics, power management mechanism, and etc. Then, the component-based architecture of TinyOS is analyzed. Based on these, the transplant scheme, the design principle of the layer of hardware description and the selection principle of processor are provided. Finally, this paper gives some conclusions and foresight.}, 
keywords={embedded systems;network operating systems;power aware computing;scheduling;wireless sensor networks;TinyOS embedded operating system transplant scheme;component-based architecture;event-driven mechanism;hardware description layer design principle;power management mechanism;processor selection principle;schedule strategy mechanics;wireless sensor network node;Application software;Batteries;Communication system control;Data processing;Energy management;Hardware;Operating systems;Power supplies;Power system management;Wireless sensor networks}, 
doi={10.1109/WICOM.2007.696}, 
ISSN={2161-9646}, 
month={Sept},}
@INPROCEEDINGS{5210958, 
author={F. Oldewurtel and J. Riihijarvi and K. Rerkrai and P. Mahonen}, 
booktitle={2009 Third International Conference on Sensor Technologies and Applications}, 
title={The RUNES Architecture for Reconfigurable Embedded and Sensor Networks}, 
year={2009}, 
pages={109-116}, 
abstract={We present the RUNES architecture for reconfigurable embedded networked systems and wireless sensor networks. It is the first systems-level architecture for such networks to explicitly deal with heterogeneity in hardware platforms, link-layer technologies and networking protocols while offering a simple programming language independent set of APIs together with a component-oriented middleware for the application developers to work on. The solutions developed are particularly appropriate for use in various emergency response scenarios, in which reconfigurability is often a key requirement. We also report on an example realisation of our architecture in a prototypical demonstration environment in a particular emergency scenario. The evaluation of architectural aspects such as reconfigurability shows that great programming flexibility can be achieved at low implementation overhead. The experience gained from RUNES modular architecture are very promising both in academic and industry projects context.}, 
keywords={embedded systems;intelligent sensors;wireless sensor networks;RUNES architecture;reconfigurable embedded networked systems;wireless sensor networks;Actuators;Computer architecture;Hardware;Middleware;Operating systems;Protocols;Sensor systems;Sensor systems and applications;System testing;Wireless sensor networks;architecture;programming model;prototype;sensor networks;software platform}, 
doi={10.1109/SENSORCOMM.2009.26}, 
month={June},}
@INPROCEEDINGS{5678449, 
author={T. Riedel and N. Fantana and A. Genaid and D. Yordanov and H. R. Schmidtke and M. Beigl}, 
booktitle={2010 Internet of Things (IOT)}, 
title={Using web service gateways and code generation for sustainable IoT system development}, 
year={2010}, 
pages={1-8}, 
abstract={Wireless Sensing and Radio Identification systems have undergone many innovations during the past years. This has led to short product lifetimes for both software and hardware compared to classical industries. However, especially industries dealing with long-term support of products, e.g. of industrial machinery, and product lifetime of 40+ years may especially profit from an Internet of Things. Motivated by a practical industrial servicing use case this paper shows how we hope to make equally sustainable IoT solutions by employing a model driven software development approach based on code generation for multi-protocol web service gateways.}, 
keywords={Web services;internetworking;program compilers;protocols;software engineering;sustainable development;Internet of things;IoT system;Web service gateways;code generation;industrial servicing;multi-protocol;radio identification systems;software development approach;sustainable development;Automata;Logic gates;Radiofrequency identification;Semantics;Unified modeling language;Web services;XML}, 
doi={10.1109/IOT.2010.5678449}, 
month={Nov},}
@INPROCEEDINGS{7460722, 
author={M. P. Andersen and G. Fierro and D. E. Culler}, 
booktitle={2016 15th ACM/IEEE International Conference on Information Processing in Sensor Networks (IPSN)}, 
title={System Design for a Synergistic, Low Power Mote/BLE Embedded Platform}, 
year={2016}, 
pages={1-12}, 
abstract={Modern IoT prototyping platforms fall short in terms of energy efficiency, connectivity and software programming practices. We present the design of a new hardware and software platform that addresses these shortcomings by bringing together Mobile, Wearable, Maker and Wireless Sensor Network technologies to enable rapid prototyping with a high degree of synergy and energy efficiency. This is achieved in part by leveraging the Memory Protection Unit on modern microcontrollers along with a novel syscall interface to provide kernel / user isolation and a clean concurrency model. Such a design allows a wide range of languages to be used for application development without significant adaptation. We demonstrate how careful choice of application language allows the naturally asynchronous nature of embedded programming to be expressed cleanly and powerfully. Finally we evaluate the platform in several integrated use cases, providing examples of the capabilities introduced by Synergy.}, 
keywords={concurrency (computers);embedded systems;microcontrollers;clean concurrency model;embedded programming;low power mote-BLE embedded platform;memory protection unit;microcontrollers;mobile network technologies;rapid prototyping;syscall interface;wearable technologies;wireless sensor network technologies;Hardware;IEEE 802.15 Standard;Microcontrollers;Software;Storms;Technological innovation;Wireless sensor networks}, 
doi={10.1109/IPSN.2016.7460722}, 
month={April},}
@INPROCEEDINGS{7562102, 
author={S. Thombre and R. Ul Islam and K. Andersson and M. S. Hossain}, 
booktitle={2016 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)}, 
title={Performance analysis of an IP based protocol stack for WSNs}, 
year={2016}, 
pages={360-365}, 
abstract={Wireless sensor networks (WSNs) are the key enablers of the Internet of Things (IoT) paradigm. Traditionally, sensor network research has been to be unlike the internet, motivated by power and device constraints. The IETF 6LoWPAN draft standard changes this, defining how IPv6 packets can be efficiently transmitted over IEEE 802.15.4 radio links. Due to this 6LoWPAN technology, low power, low cost microcontrollers can be connected to the internet forming what is known as the Wireless embedded Internet. Another IETF recommendation, CoAP allows these devices to communicate interactively over the Internet. The integration of such tiny, ubiquitous electronic devices to the Internet enables interesting real-time applications. We evaluate the performance of a stack consisting of CoAP and 6LoWPAN over the IEEE 802.15.4 radio link using the Contiki OS and Cooja simulator, along with the CoAP framework Californium (Cf).}, 
keywords={IP networks;Internet of Things;Zigbee;access protocols;packet radio networks;wireless sensor networks;CoAP framework californium;Contiki OS;Cooja simulator;IEEE 802.15.4 radio links;IETF 6LoWPAN draft standard;IP based protocol stack;IPv6 packets;Internet of Things;IoT;WSN;performance analysis;ubiquitous electronic devices;wireless embedded Internet;wireless sensor networks;IEEE 802.15 Standard;IP networks;Internet of things;Protocols;Wireless sensor networks;6LoWPAN;Californium (Cf);CoAP;Contiki;Cooja}, 
doi={10.1109/INFCOMW.2016.7562102}, 
month={April},}
@INPROCEEDINGS{4228186, 
author={M. Cohen and T. Ponte and S. Rossetto and N. Rodriguez}, 
booktitle={2007 IEEE International Parallel and Distributed Processing Symposium}, 
title={Using Coroutines for RPC in Sensor Networks}, 
year={2007}, 
pages={1-8}, 
abstract={This paper proposes a concurrency model which integrates the asynchronous and event-driven nature of wireless sensor networks with higher-level abstractions that provide a more familiar programming style for the developer. As a basis for this proposal, we designed and implemented a cooperative multitasking scheduler, based on coroutines, for the TinyOS operating system. We then used this scheduler to implement RPC-like interfaces that capture different communication patterns common in wireless sensor networks. This allows the programmer to work, when appropriate, with a synchronous style, while maintaining an asynchronous model at the message exchange level.}, 
keywords={concurrency control;network operating systems;remote procedure calls;scheduling;wireless sensor networks;RPC coroutine;RPC-like interface;TinyOS operating system;concurrency model;cooperative multitasking scheduler;event-driven wireless sensor network;Computer languages;Concurrent computing;Embedded system;Multitasking;Operating systems;Programming profession;Proposals;Sensor phenomena and characterization;Testing;Wireless sensor networks}, 
doi={10.1109/IPDPS.2007.370458}, 
ISSN={1530-2075}, 
month={March},}
@INPROCEEDINGS{7371363, 
author={G. Ferro and R. Silva and L. Lopes}, 
booktitle={2015 IEEE 18th International Conference on Computational Science and Engineering}, 
title={Towards Out-of-the-Box Programming of Wireless Sensor-Actuator Networks}, 
year={2015}, 
pages={110-119}, 
abstract={We address the problem of providing users, namely non specialists, with out-of-the-box, programmable, Wireless Sensor-Actuator Networks (WSN). The idea is that users get a package containing a gateway and an undetermined number of nodes, pre-configured to work as a self-organized wireless mesh. Each node comes with two pre-installed components: a small operating system and a virtual machine. The user can then use a simple, domain-specific, programming language to implement periodic tasks that are compiled into byte-code, and can be sent to the nodes for execution. At the nodes, the operating system manages a task table and schedules non-preemptive tasks for execution using the virtual machine. No subtle hardware or software configuration is required from the user as these details are abstracted away by the virtual machine. We developed a full specification for a data-layer that follows the aforementioned guidelines and implemented a complete prototype, integrated in our own Publish/Subscribe middleware called SONAR. In this paper we report the first results of using the prototype as compared to using the low level programming tools provided with the hardware. We measure a small increase in both resource consumption and processing overhead suggesting that this data-layer can be used effectively in WSN, even in cases where nodes have very limited hardware resources.}, 
keywords={actuators;programming languages;virtual machines;wireless sensor networks;Publish/Subscribe middleware;SONAR;WSN;byte-code;gateway;level programming tools;operating system;out-of-the-box programming;programming language;virtual machine;wireless sensor-actuator networks;Logic gates;Operating systems;Programming;Sensors;Sonar;Virtual machining;Wireless sensor networks;Programming Language;Virtual Machine;Wireless Sensor Network}, 
doi={10.1109/CSE.2015.20}, 
month={Oct},}
@INPROCEEDINGS{5663821, 
author={M. Strube and M. Daum and R. Kapitza and F. Villanueva and F. Dressler}, 
booktitle={The 7th IEEE International Conference on Mobile Ad-hoc and Sensor Systems (IEEE MASS 2010)}, 
title={Dynamic operator replacement in sensor networks}, 
year={2010}, 
pages={748-750}, 
abstract={We present an integrated approach for supporting in-network sensor data processing in dynamic and heterogeneous sensor networks. The concept relies on data stream processing techniques that define and optimize the distribution of queries and their operators. We anticipate a high degree of dynamics in the network, which can for example be expected in the case of wildlife monitoring applications. The distribution of operators to individual nodes demands system level capabilities not available in current sensor node operating systems. In particular, we present a system for seamless and on demand operator migration between sensor nodes. Our framework, which we implemented for Contiki running on TelosB nodes, supports stateful module migration including selected parts of the code and data sections.}, 
keywords={optimisation;wireless sensor networks;Contiki running;TelosB nodes;data stream processing;dynamic operator replacement;dynamic sensor networks;heterogeneous sensor networks;in-network sensor data processing;optimization;Data processing;Distributed databases;Operating systems;Programming;Runtime;Servers;Wireless sensor networks}, 
doi={10.1109/MASS.2010.5663821}, 
ISSN={2155-6806}, 
month={Nov},}
@INPROCEEDINGS{7471346, 
author={M. P. Andersen and G. Fierro and D. E. Culler}, 
booktitle={2016 IEEE First International Conference on Internet-of-Things Design and Implementation (IoTDI)}, 
title={Enabling Synergy in IoT: Platform to Service and Beyond}, 
year={2016}, 
pages={1-12}, 
abstract={To enable a prosperous Internet of Things, devices and services must be extensible and adapt to changes in the environment or user interaction patterns. These requirements manifest as a set of design principles for each of the layers in an IoT ecosystem, from hardware to cloud services. This paper gives concrete guidelines learned from building a full-stack Synergistic IoT platform.}, 
keywords={Internet of Things;wireless sensor networks;Internet of Things;IoT synergy;synergistic IoT platform;user interaction pattern;Complexity theory;Context;Hardware;IEEE 802.15 Standard;Metadata;Protocols;Software;Internet of Things;Sensor motes;Wireless sensor networks}, 
doi={10.1109/IoTDI.2015.45}, 
month={April},}
@ARTICLE{7387670, 
author={M. Amjad and M. Sharif and M. K. Afzal and S. W. Kim}, 
journal={IEEE Sensors Journal}, 
title={TinyOS-New Trends, Comparative Views, and Supported Sensing Applications: A Review}, 
year={2016}, 
volume={16}, 
number={9}, 
pages={2865-2889}, 
abstract={The wireless sensor network (WSN) is an interesting area for modern day research groups. Tiny sensor nodes are deployed in a diversity of environments but with limited resources. Scarce resources compel researchers to employ an operating system that requires limited memory and minimum power. Tiny operating system (TinyOS) is a widely used operating system for sensor nodes, which provides concurrency and flexibility while adhering to the constraints of scarce resources. Comparatively, TinyOS is considered to be the most robust, innovative, energy-efficient, and widely used operating system in sensor networks. This paper looks at the state-of-the-art TinyOS and the different dimensions of its design paradigm, programming model, execution model, scheduling algorithms, concurrency, memory management, hardware support platforms, and other features. The addition of different features in TinyOS makes it the operating system of choice for WSNs. Sensing nodes with TinyOS seem to show more flexibility in supporting diverse types of sensing applications.}, 
keywords={systems software;wireless sensor networks;Tiny operating system;concurrency;design paradigm;execution model;hardware support platforms;memory management;programming model;scheduling algorithms;sensor nodes;wireless sensor network;Adaptation models;Concurrent computing;Instruction sets;Operating systems;Programming;Sensors;Wireless sensor networks;Wireless sensor networks;energy efficiency;operating system;sensor nodes},
doi={10.1109/JSEN.2016.2519924}, 
ISSN={1530-437X}, 
month={May},}
@INPROCEEDINGS{6842273, 
author={U. Cekmez and M. Ozsiginan and O. K. Sahingoz}, 
booktitle={2014 International Conference on Unmanned Aircraft Systems (ICUAS)}, 
title={A UAV path planning with parallel ACO algorithm on CUDA platform}, 
year={2014}, 
pages={347-354}, 
abstract={Solving the path planning problem of a UAV is a challenging issue especially if there are too many checkpoints to visit. Mainly, the brute force approach is used to find the shortest path in the mission area, which requires too many times to find a solution. Therefore, evolutionary algorithms and swarm intelligence techniques are used to find a feasible solution in an acceptable time. In this study, path planning problem of a UAV is solved by using a highly parallelized Ant Colony Optimization (ACO) algorithm on CUDA platform. The UAV path is constructed for disseminating keys and collecting data from a Wireless Sensor Network, which is previously defined. Due to its simplicity and effectiveness, ACO is selected as a path planning algorithm. However, ACO is not satisfactory if the mission area becomes large and there are an excessive number of checkpoints and/or additional constraints. In order to increase the performance, some parallelization techniques must be used in high performance computing platforms. GPU architecture has emerged as a powerful and low cost architecture for enabling impressive speedups for scientific calculations. Therefore, the parallel structure is constructed on CUDA architecture. The experimental results are compared with the CPU performance of the serial algorithm, and they clearly show that the proposed approach have a great potential for acceleration of ACO and allow to solve many complex tasks such as UAV path planning problem. We also present the execution results with different parameter values to expose the results for the researchers.}, 
keywords={ant colony optimisation;autonomous aerial vehicles;graphics processing units;mobile robots;parallel architectures;path planning;CUDA platform;GPU architecture;UAV path planning;ant colony optimization;brute force approach;compute unified device architecture;evolutionary algorithms;graphics processing units;parallel ACO algorithm;swarm intelligence techniques;unmanned aerial vehicle;wireless sensor network;Central Processing Unit;Cities and towns;Computer architecture;Graphics processing units;Instruction sets;Path planning;Planning}, 
doi={10.1109/ICUAS.2014.6842273}, 
month={May},}
@INPROCEEDINGS{4292873, 
author={M. Karpinski and V. Cahill}, 
booktitle={2007 4th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks}, 
title={High-Level Application Development is Realistic for Wireless Sensor Networks}, 
year={2007}, 
pages={610-619}, 
abstract={Programming wireless sensor network (WSN) applications is known to be a difficult task. Part of the problem is that the resource limitations of typical WSN nodes force programmers to use relatively low-level techniques to deal with the logical concurrency and asynchronous event handling inherent in these applications. In addition, existing general-purpose, node-level programming tools only support the networked nature of WSN applications in a limited way and result in application code that is hardly portable across different software platforms. All of this makes programming a single device a tedious and error-prone task. To address these issues we propose a high-level programming model that allows programmers to express applications as hierarchical state machines and to handle events and application concurrency in a way similar to imperative synchronous languages. Our program execution model is based on static scheduling what allows for standalone application analysis and testing. For deployment, the resulting programs are translated into efficient sequential C code. A prototype compiler for TinyOS has been implemented and its evaluation in described in this paper.}, 
keywords={C++ language;wireless sensor networks;TinyOS;asynchronous event handling;hierarchical state machines;high-level application development;high-level programming model;logical concurrency;node-level programming tools;nodes force programmers;resource limitations;sequential C code;software platforms;synchronous languages;wireless sensor networks;Application software;Computer languages;Computer science;Concurrent computing;Hardware;Operating systems;Peer to peer computing;Programming profession;Prototypes;Wireless sensor networks}, 
doi={10.1109/SAHCN.2007.4292873}, 
ISSN={2155-5486}, 
month={June},}
@INPROCEEDINGS{7925596, 
author={C. Shen and S. Chen}, 
booktitle={2017 IEEE Wireless Communications and Networking Conference (WCNC)}, 
title={A Cyber-Physical Design for Indoor Temperature Monitoring Using Wireless Sensor Networks}, 
year={2017}, 
pages={1-6}, 
abstract={Indoor temperature monitoring using wireless sensor networks is critical in many applications. For example, in data centers, it is important to monitor if the indoor temperature is within certain range so that the computers can function with near-optimal performance. In contrast to existing research that often separates the sensor network design and the measured temperature, this paper proposes a cyber-physical design approach to monitor the indoor temperature using wireless sensor networks. The source sensor wakes up and senses the temperature periodically using sleep#x002F;wake duty cycles and sends the data to the destination via multi-hop relaying nodes in an anycast way. Moreover, the period of sleep#x002F;wake duty cycle is dynamically adjusted based on the sensed temperature: when the measured temperature is normal, the sensor nodes wake up infrequently for better energy efficiency; as the sensed temperature approaches a pre-determined threshold, the sensor nodes wake up more frequently to avoid any delayed alarm trigger. The proposed design is implemented using TelosB with TinyOS, and experiments confirm that the cyber-physical system reports the alarm with a very small delay while achieving high long-term energy efficiency.}, 
keywords={computerised monitoring;cyber-physical systems;temperature sensors;wireless sensor networks;cyber-physical design;energy efficiency;indoor temperature monitoring;multihop relaying nodes;source sensor;wireless sensor networks;Monitoring;Protocols;Relays;Temperature distribution;Temperature measurement;Temperature sensors;Wireless sensor networks}, 
doi={10.1109/WCNC.2017.7925596}, 
month={March},}