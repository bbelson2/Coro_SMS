@INPROCEEDINGS{4239012, 
author={X. Wang and X. Zhao and Z. Liang and M. Tan}, 
booktitle={2007 IEEE International Conference on Networking, Sensing and Control}, 
title={Deploying a Wireless Sensor Network on the Coal Mines}, 
year={2007}, 
pages={324-328}, 
abstract={In this paper we describe our experiences using a wireless sensor network to monitor the coal mines with sensors. Wireless networks that link sensors have the potential to greatly benefit for monitoring of coal mine conditions and localization of miners. Substituting light, small wireless sensor network nodes for traditional wired, heavy and fixed monitoring equipment leads to faster, easier and larger-scale deployments in complicated environment. Network consisted of many wireless sensor nodes is now feasible in practice. The primary problem of designing a wireless sensor network for coal mine monitoring and localization of miners is the high system reliability and robustness demanded by its application and safety. The topology of sensor networks is also a main factor we have to take into account. The sensor network application we designed for coal mine monitoring bases on Berkeley TinyOS and Motes platform. We evaluate this design and gain some useful experiences which will benefit our subsequent work.}, 
keywords={coal;mining industry;wireless sensor networks;coal mine monitoring;high system reliability;larger-scale deployments;miners localization;wireless sensor network;Accidents;Automation;Energy management;Large-scale systems;Monitoring;Network topology;Reliability;Robustness;Safety;Wireless sensor networks}, 
doi={10.1109/ICNSC.2007.372799}, 
month={April},}
@INPROCEEDINGS{4797078, 
author={Y. XiangMin and W. WenYong and X. Yu}, 
booktitle={2009 WRI International Conference on Communications and Mobile Computing}, 
title={An IPv6 Wireless Sensor Network Node-TaraxNode}, 
year={2009}, 
volume={2}, 
pages={9-14}, 
abstract={This paper presents the IPv6 wireless sensor network platform system TaraxNode. It is designed and implemented with independent intellectual property rights. For effectively monitoring, we developed TaraxOS, which includes a cluster-based self-organized multi-hop routing protocol. It is a multi-task, high-powered, low energy-consumed operating system for sensor nodes. TaraxNode containing heterogeneous elements provides numerous benefits at the traditional intelligent monitor system. It is mainly composed of a low power consumed MCU TaraxCore and WSN data acquired unit etc. When applied at the central air-condition intelligent monitor and control system, it gives excellent result.}, 
keywords={computerised monitoring;industrial property;intelligent sensors;operating systems (computers);routing protocols;wireless sensor networks;IPv6;TaraxNode;TaraxOS;central air-condition intelligent monitor;cluster-based self-organized multihop routing protocol;control system;intellectual property rights;intelligent monitor system;operating system;sensor nodes;wireless sensor network node;Centralized control;Intellectual property;Intelligent control;Intelligent sensors;Intelligent systems;Monitoring;Operating systems;Routing protocols;Sensor systems;Wireless sensor networks}, 
doi={10.1109/CMC.2009.111}, 
month={Jan},}
@INPROCEEDINGS{6690509, 
author={A. V. Brito and A. V. Negreiros and C. Roth and O. Sander and J. Becker}, 
booktitle={2013 IEEE/ACM 17th International Symposium on Distributed Simulation and Real Time Applications}, 
title={Development and Evaluation of Distributed Simulation of Embedded Systems Using Ptolemy and HLA}, 
year={2013}, 
pages={189-196}, 
abstract={Nowadays, embedded systems have a huge amount of computational power and consequently, high complexity. It is quite usual to find different applications being executed in embedded systems. Embedded system design demands for method and tools that allow the simulation and verification in an efficient and practical way. This paper proposes the development and evaluation of a solution for embedded modeling and simulation of heterogeneous Models of Computation (MoCs) in a distributed way by the integration of Ptolemy II and the High Level Architecture (HLA), a middleware for distributed discrete event simulation, in order to create an environment with high-performance execution of large-scale heterogeneous models. Experimental results demonstrate, that the use of a non distributed simulation for some situations can be infeasible, as well as the use of distributed simulation with few machines, like one, two or three computers. It was demonstrated that a speedup of factor 4 was acquired when a model with 4,000 thousands actors were distributed in 8 different machines.}, 
keywords={discrete event simulation;embedded systems;middleware;HLA;MoC;Ptolemy II;computational power;distributed discrete event simulation;embedded modeling and simulation;embedded systems;heterogeneous models of computation;high level architecture;high-performance execution;large-scale heterogeneous models;middleware;nondistributed simulation;Computational modeling;Computer architecture;Embedded systems;Ports (Computers);Sensors;Unified modeling language;Wireless sensor networks;Distributed Simulation;Embedded Systems;Heterogeneous Simulation}, 
doi={10.1109/DS-RT.2013.28}, 
ISSN={1550-6525}, 
month={Oct},}
@INPROCEEDINGS{5302678, 
author={W. h. Wang and Y. l. Cui and T. m. Chen}, 
booktitle={2009 5th International Conference on Wireless Communications, Networking and Mobile Computing}, 
title={Identity-Based Authentication Protocol with Paring of Tate on WSN}, 
year={2009}, 
pages={1-4}, 
abstract={Identity cryptography is widely used in security authentication. This paper proposes a standard identity-based authentication scheme, and also proves the security of the scheme under passive attack. On the basis of ECC and bilinear maps, paper implements the authentication protocol in the platform of TinyOs. Finally, paper analyzes its result and proves its feasibility.}, 
keywords={cryptographic protocols;message authentication;telecommunication security;wireless sensor networks;TinyOs platform;WSN;cryptography;identity-based authentication protocols;security authentication;wireless sensor networks;Application software;Authentication;Cryptographic protocols;Electronic mail;Elliptic curve cryptography;Hardware;Identity-based encryption;Public key cryptography;Security;Wireless sensor networks}, 
doi={10.1109/WICOM.2009.5302678}, 
ISSN={2161-9646}, 
month={Sept},}
@INPROCEEDINGS{8016226, 
author={A. Elsts and G. Oikonomou and X. Fafoutis and R. Piechocki}, 
booktitle={2017 Global Internet of Things Summit (GIoTS)}, 
title={Internet of Things for smart homes: Lessons learned from the SPHERE case study}, 
year={2017}, 
pages={1-6}, 
abstract={Building large-scale low-power Internet of Things (IoT) systems remains a challenge, as these systems have to meet the requirements of reliability, robustness, and energy-efficiency while running on resource-restricted microcontrollers without memory protection. In this paper we present the case study of IoT in SPHERE (Sensor Platform for HEalthcare in a Residential Environment), a project with the objective to develop a multipurpose, multi-modal sensor platform for monitoring people's health inside their homes. Atypically for academic projects, in 2017 the SPHERE software is going to be deployed in a 100-home study in volunteer homes, therefore it has to satisfy many real-world requirements. We discuss the requirements for IoT networking in this project, the IoT architecture (built on top of Contiki OS), software engineering challenges and lessons learned, as well as some of the general aspects that still make embedded low-power IoT software development difficult.}, 
keywords={Internet of Things;assisted living;power aware computing;sensors;software engineering;IoT;SPHERE case study;embedded low-power IoT software development;energy-efficiency;large-scale low-power Internet of Things systems;multipurpose multimodal sensor platform;real-world requirements;resource-restricted microcontrollers;sensor platform for healthcare in a residential environment;smart homes;software engineering challenges;volunteer homes;Hardware;IEEE 802.15 Standard;Logic gates;Protocols;Reliability;Servers;Software}, 
doi={10.1109/GIOTS.2017.8016226}, 
month={June},}
@INPROCEEDINGS{4694538, 
author={D. Singh and U. S. Tiwary and Wan-Young Chung}, 
booktitle={2008 International Conference on Control, Automation and Systems}, 
title={IP-based ubiquitous healthcare system}, 
year={2008}, 
pages={131-136}, 
abstract={This paper presents a new concept of MAC and LOAD protocols for IP based ubiquitous healthcare system. The system used IEEE 802.15.4 standard lowpan with integrated IPv6. For healthcare system we added LOAD (6lowpan Ad-hoc on Demand Distance Vector) and MAC (Medium Access Control) protocols in Harvanpsilas 6lowpan stack. 6lowpan stack has ability to connect the physical environment in real-world applications such as healthcare, wireless sensor network, network technology etc. IP-enable motes set on the patient body for retrieving biomedical from body in PAN. PAN network connected PC via gateway or base station for further analysis or to the doctorpsilas PDA (personal digital assistant). The doctor can recognize or analysis patient data from anywhere on globe by internet service provider equipments (PDA). Result shows the performance biomedical data packets in multi-hope routing as well as represents the topology of the networks. TelosB motes were tested on octopus simulator in tinyOS2.02 for performance of biomedical data communication and network topology.}, 
keywords={IP networks;Internet;access protocols;ad hoc networks;biomedical communication;data communication;health care;personal area networks;telecommunication network routing;telecommunication network topology;ubiquitous computing;wireless sensor networks;6lowpan ad-hoc on demand distance vector;IEEE 802.15.4 standard lowpan;IP-based ubiquitous healthcare system;IPv6;LOAD protocols;MAC protocols;biomedical data communication;multihope routing;network technology;network topology;personal digital assistant;tinyOS2.02;wireless sensor network;Access protocols;Base stations;Bioinformatics;Data analysis;Media Access Protocol;Medical services;Network topology;Personal digital assistants;Wireless application protocol;Wireless sensor networks;6lowpan;Body Area Networks;Healthcare;IP-based;PAN;TelosB;TinyOS}, 
doi={10.1109/ICCAS.2008.4694538}, 
month={Oct},}
@INPROCEEDINGS{6651023, 
author={A. Branco and A. L. d. Moura and N. Rodriguez and S. Rossetto}, 
booktitle={2013 IEEE International Symposium on Parallel Distributed Processing, Workshops and Phd Forum}, 
title={Teaching Concurrent and Distributed Computing -- Initiatives in Rio de Janeiro}, 
year={2013}, 
pages={1318-1323}, 
abstract={In this paper we describe two ongoing initiatives for teaching concurrency and distribution in PUC-Rio and UFRJ. One of them is a new approach for teaching distributed systems. Conventional distributed system courses follow a syllabus in which a list of topics is discussed independently and at different levels of abstractions. In Edupar'2012, we proposed a course with a novel approach, using a wireless sensor network environment to pin all topics down to concrete applications and to maintain issues such as fault tolerance and coordination continuously present. The second initiative is a smaller one, in which we insert a new topic in a Systems Software course to allow students to have a better understanding of what is application-level multitasking and of how it can be implemented. In this paper, we report on the experience of teaching the proposed syllabus and the adjustments that were necessary. We also discuss some plans for the courses in 2013.}, 
keywords={concurrency control;distributed processing;teaching;wireless sensor networks;application-level multitasking;concurrent computing;distributed computing;systems software course;teaching;wireless sensor network environment;Education;Fault tolerance;Fault tolerant systems;Materials;Programming;Proposals;Wireless sensor networks;application-level multitasking;coroutines;cross-cutting approaches;event-based programming;fault tolerance}, 
doi={10.1109/IPDPSW.2013.33}, 
month={May},}
@INPROCEEDINGS{7983156, 
author={U. A. Noman and B. Negash and A. M. Rahmani and P. Liljeberg and H. Tenhunen}, 
booktitle={2017 14th IEEE Annual Consumer Communications Networking Conference (CCNC)}, 
title={From threads to events: Adapting a lightweight middleware for Contiki OS}, 
year={2017}, 
pages={486-491}, 
abstract={Interoperability is one of the key requirements in the Internet of Things considering the diverse platforms, communication standards and specifications available today. Inherent resource constraints in the majority of IoT devices makes it very difficult to use existing solutions for interoperability, thus demanding new approaches. This paper presents the process of adapting a lightweight interoperability middleware for IoT, LISA, from RIOT to Contiki OS and evaluates memory and power overheads. The middleware follows a service oriented architecture and classifies devices according to available resources to assign different roles, such as Application, Service and Manager Nodes. These roles live in different tiers in a generic IoT architecture, where the Manager nodes are located in the intermediate Fog layer. To adapt to an event based kernel of Contiki, the middleware defines and handles a set of events that are used to communicate with the user application. A network of nodes is simulated to show the architecture promoted by the middleware and the results are presented.}, 
keywords={Internet of Things;middleware;open systems;operating systems (computers);service-oriented architecture;Contiki OS;IoT architecture;IoT devices;LISA;RIOT;event based kernel;intermediate fog layer;lightweight interoperability middleware;manager nodes;memory overheads;power overheads;resource constraints;Internet of Things;Interoperability;Manganese;Message systems;Middleware;Protocols;Semantics;Contiki;Internet of Things;Interoperability;LISA}, 
doi={10.1109/CCNC.2017.7983156}, 
month={Jan},}
@INPROCEEDINGS{6926617, 
author={Ye Jihua and W. Wang}, 
booktitle={2014 9th International Conference on Computer Science Education}, 
title={Research and design of solar photovoltaic power generation monitoring system based on TinyOS}, 
year={2014}, 
pages={1020-1023}, 
abstract={In this paper, in order to solve management problems and field maintenance difficult issues existing in the process of PV power generation, we have designed a remote intelligent monitoring system based on TinyOS for monitoring and management. This system had implemented remote monitoring and reverse control by host computer, ARM gateways, wireless sensor networks and other components.}, 
keywords={microcontrollers;photovoltaic power systems;power system measurement;wireless sensor networks;ARM gateways;PV power generation;TinyOS;field maintenance;host computer;management problems;remote intelligent monitoring system;remote monitoring;reverse control;wireless sensor networks;Computers;Data analysis;Logic gates;Monitoring;Routing;Wireless communication;Wireless sensor networks;IOT;TinyOS;node;remote monitoring}, 
doi={10.1109/ICCSE.2014.6926617}, 
month={Aug},}
@INPROCEEDINGS{6825342, 
author={A. V. Brito and A. V. Negreiros}, 
booktitle={2013 III Brazilian Symposium on Computing Systems Engineering}, 
title={Allowing Large-Scale Systems Evaluation with Ptolemy through Distributed Simulation}, 
year={2013}, 
pages={53-58}, 
abstract={Nowadays, embedded systems have a huge amount of computational power and consequently, high complexity. It is quite usual to find different applications being executed in embedded systems. Embedded system design demands for method and tools that allow the simulation and verification in an efficient and practical way. This paper proposes the development and evaluation of a solution for embedded modeling and simulation of embedded systems in a distributed way by the integration of Ptolemy II and the High Level Architecture (HLA), in order to create an environment with high-performance execution of large-scale models. Experimental results demonstrated that the use of a non distributed simulation for some situations can be infeasible. It was demonstrated that a speedup of factor 4 was acquired when a model with 4,000 thousands actors were distributed in 8 different machines. It also presented a model of execution of each CPU core during the simulation.}, 
keywords={digital simulation;embedded systems;telecommunication computing;wireless sensor networks;CPU core;HLA;Ptolemy II;embedded modeling;embedded simulation;embedded system design;high level architecture;high-performance execution;large-scale models;large-scale systems evaluation;nondistributed simulation;wireless sensor network;Computational modeling;Computer architecture;Embedded systems;Graphics;Unified modeling language;Wireless sensor networks;Distributed Simulation;Embedded Systems;Heterogeneous Simulation}, 
doi={10.1109/SBESC.2013.19}, 
ISSN={2324-7886}, 
month={Dec},}
@INPROCEEDINGS{6575497, 
author={P. Kugler and P. Nordhus and B. Eskofier}, 
booktitle={2013 IEEE International Conference on Body Sensor Networks}, 
title={Shimmer, Cooja and Contiki: A new toolset for the simulation of on-node signal processing algorithms}, 
year={2013}, 
pages={1-6}, 
abstract={Wearable sensors are widely used for data collection in many applications. Ssensor nodes have also been applied for real-time applications, e.g. for ECG analysis or activity and fall detection. Processing of the sensor data is either done on an external device or on the node itself. While on-node processing reduces data rate and increases battery life, development and testing can be time-consuming. To allow faster implementation of such algorithms, we propose a simulation framework for the Shimmer platform using the Cooja simulator, MSPSim and the Contiki operating system. We provide the simulator and example applications compatible with the ShimmerConnect protocol, allowing streaming of raw and pre-processed sensor data to MATLAB, LabView and Android. Additionally, a simple activity and fall detection algorithm was implemented on the sensor node and evaluated using both the simulator and real hardware. In the future this will allow rapid development and testing of on-node pre-processing algorithms.}, 
keywords={Bluetooth;Hardware;Operating systems;Sensors;Testing;Wireless communication;Wireless sensor networks}, 
doi={10.1109/BSN.2013.6575497}, 
ISSN={2376-8886}, 
month={May},}
@INPROCEEDINGS{4224663, 
author={C. Suh and J. E. Joung and Y. B. Ko}, 
booktitle={2007 IEEE Wireless Communications and Networking Conference}, 
title={New RF Models of the TinyOS Simulator for IEEE 802.15.4 Standard}, 
year={2007}, 
pages={2236-2240}, 
abstract={Recently, wireless sensor networks have gained increasing attention from the industry as well as academia. Various research issues related with sensor networks are intensively proposed, and they are evaluated by some network simulators or real sensor platforms. One of the well-known simulators for wireless sensor networks is called TOSSIM. It can simulate with TinyOS source codes on the real testbed without any significant modifications. Although TOSSIM's architecture and interfaces are well designed for wireless sensor networks based on IEEE 802.15.4 standards, its current RF model is too simple to support main features of the PHY stack of the IEEE 802.15.4. In order to enhance the accuracy of wireless simulation results and implement IEEE 802.15.4 standard, we design a new wireless propagation model and RF physical stack based on the two-ray ground path loss model and CC2420 RF transceiver. Our work contributes on the performance evaluation areas of wireless sensor networks and IEEE 802.15.4 WPAN standard using simulations.}, 
keywords={IEEE standards;personal area networks;source coding;telecommunication standards;transceivers;wireless sensor networks;CC2420 RF transceiver;IEEE 802.15.4 standard;RF models;RF physical stack;TOSSIM;TinyOS simulator;WPAN standard;source codes;wireless propagation model;wireless sensor networks;Hardware;Intelligent sensors;Operating systems;Propagation losses;Radio frequency;Sensor systems;Transceivers;Wireless application protocol;Wireless communication;Wireless sensor networks}, 
doi={10.1109/WCNC.2007.418}, 
ISSN={1525-3511}, 
month={March},}
@INPROCEEDINGS{4678868, 
author={M. Yu and S. Xiahou and X. Li}, 
booktitle={2008 4th International Conference on Wireless Communications, Networking and Mobile Computing}, 
title={A Survey of Studying on Task Scheduling Mechanism for TinyOS}, 
year={2008}, 
pages={1-4}, 
abstract={Although TinyOS has been regarded as the defacto standard for WSN (Wireless Sensor Network) applications, its simple task scheduling mechanism became a great obstacle to WSN applications. This paper, from two directions (one based on cooperative, the other based on preemptive), presented a variety of scheduling algorithms and their application in TinyOS. And their characters and advantage were discussed as well in terms of energy consuming, tasks executing efficiency. Then a new, integrated and adaptive task scheduling mechanism was pointed out for the future TinyOS task scheduling. This new scheduling mechanism was characterized with features of dynamical adaptability and context-awareness.}, 
keywords={scheduling;wireless sensor networks;TinyOS;task scheduling mechanism;wireless sensor network;Adaptive scheduling;Computer languages;Context;Dynamic scheduling;Mobile communication;Mobile computing;Processor scheduling;Scheduling algorithm;Sensor systems and applications;Wireless sensor networks}, 
doi={10.1109/WiCom.2008.960}, 
ISSN={2161-9646}, 
month={Oct},}
@ARTICLE{6472115, 
author={M. T. Lazarescu}, 
journal={IEEE Journal on Emerging and Selected Topics in Circuits and Systems}, 
title={Design of a WSN Platform for Long-Term Environmental Monitoring for IoT Applications}, 
year={2013}, 
volume={3}, 
number={1}, 
pages={45-54}, 
abstract={The Internet of Things (IoT) provides a virtual view, via the Internet Protocol, to a huge variety of real life objects, ranging from a car, to a teacup, to a building, to trees in a forest. Its appeal is the ubiquitous generalized access to the status and location of any “thing” we may be interested in. Wireless sensor networks (WSN) are well suited for long-term environmental data acquisition for IoT representation. This paper presents the functional design and implementation of a complete WSN platform that can be used for a range of long-term environmental monitoring IoT applications. The application requirements for low cost, high number of sensors, fast deployment, long lifetime, low maintenance, and high quality of service are considered in the specification and design of the platform and of all its components. Low-effort platform reuse is also considered starting from the specifications and at all design levels for a wide array of related monitoring applications.}, 
keywords={IP networks;Internet of Things;data acquisition;environmental monitoring (geophysics);environmental science computing;quality of service;sensor placement;telecommunication network reliability;wireless sensor networks;Internet Protocol;Internet-of-Things;IoT application;IoT representation;WSN platform;functional design;long-term environmental data acquisition;long-term environmental monitoring;network lifetime;quality of service;sensor deployment;ubiquitous generalized access;wireless sensor networks;Internet of Things (IoT);IoT applications;WSN optimized design;WSN platform;WSN protocol;long term environmental monitoring applications;wireless sensor networks (WSN)}, 
doi={10.1109/JETCAS.2013.2243032}, 
ISSN={2156-3357}, 
month={March},}
@INPROCEEDINGS{4340471, 
author={M. Yao and X. Zhu}, 
booktitle={2007 International Conference on Wireless Communications, Networking and Mobile Computing}, 
title={Study and Transplant of Operating System for Wireless Sensor Network Node}, 
year={2007}, 
pages={2803-2807}, 
abstract={This paper studies the embedded operating system TinyOS, including its event-driven mechanism, schedule strategy mechanics, power management mechanism, and etc. Then, the component-based architecture of TinyOS is analyzed. Based on these, the transplant scheme, the design principle of the layer of hardware description and the selection principle of processor are provided. Finally, this paper gives some conclusions and foresight.}, 
keywords={embedded systems;network operating systems;power aware computing;scheduling;wireless sensor networks;TinyOS embedded operating system transplant scheme;component-based architecture;event-driven mechanism;hardware description layer design principle;power management mechanism;processor selection principle;schedule strategy mechanics;wireless sensor network node;Application software;Batteries;Communication system control;Data processing;Energy management;Hardware;Operating systems;Power supplies;Power system management;Wireless sensor networks}, 
doi={10.1109/WICOM.2007.696}, 
ISSN={2161-9646}, 
month={Sept},}
@INPROCEEDINGS{5678449, 
author={T. Riedel and N. Fantana and A. Genaid and D. Yordanov and H. R. Schmidtke and M. Beigl}, 
booktitle={2010 Internet of Things (IOT)}, 
title={Using web service gateways and code generation for sustainable IoT system development}, 
year={2010}, 
pages={1-8}, 
abstract={Wireless Sensing and Radio Identification systems have undergone many innovations during the past years. This has led to short product lifetimes for both software and hardware compared to classical industries. However, especially industries dealing with long-term support of products, e.g. of industrial machinery, and product lifetime of 40+ years may especially profit from an Internet of Things. Motivated by a practical industrial servicing use case this paper shows how we hope to make equally sustainable IoT solutions by employing a model driven software development approach based on code generation for multi-protocol web service gateways.}, 
keywords={Web services;internetworking;program compilers;protocols;software engineering;sustainable development;Internet of things;IoT system;Web service gateways;code generation;industrial servicing;multi-protocol;radio identification systems;software development approach;sustainable development;Automata;Logic gates;Radiofrequency identification;Semantics;Unified modeling language;Web services;XML}, 
doi={10.1109/IOT.2010.5678449}, 
month={Nov},}
@INPROCEEDINGS{7460722, 
author={M. P. Andersen and G. Fierro and D. E. Culler}, 
booktitle={2016 15th ACM/IEEE International Conference on Information Processing in Sensor Networks (IPSN)}, 
title={System Design for a Synergistic, Low Power Mote/BLE Embedded Platform}, 
year={2016}, 
pages={1-12}, 
abstract={Modern IoT prototyping platforms fall short in terms of energy efficiency, connectivity and software programming practices. We present the design of a new hardware and software platform that addresses these shortcomings by bringing together Mobile, Wearable, Maker and Wireless Sensor Network technologies to enable rapid prototyping with a high degree of synergy and energy efficiency. This is achieved in part by leveraging the Memory Protection Unit on modern microcontrollers along with a novel syscall interface to provide kernel / user isolation and a clean concurrency model. Such a design allows a wide range of languages to be used for application development without significant adaptation. We demonstrate how careful choice of application language allows the naturally asynchronous nature of embedded programming to be expressed cleanly and powerfully. Finally we evaluate the platform in several integrated use cases, providing examples of the capabilities introduced by Synergy.}, 
keywords={concurrency (computers);embedded systems;microcontrollers;clean concurrency model;embedded programming;low power mote-BLE embedded platform;memory protection unit;microcontrollers;mobile network technologies;rapid prototyping;syscall interface;wearable technologies;wireless sensor network technologies;Hardware;IEEE 802.15 Standard;Microcontrollers;Software;Storms;Technological innovation;Wireless sensor networks}, 
doi={10.1109/IPSN.2016.7460722}, 
month={April},}
@INPROCEEDINGS{7562102, 
author={S. Thombre and R. Ul Islam and K. Andersson and M. S. Hossain}, 
booktitle={2016 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)}, 
title={Performance analysis of an IP based protocol stack for WSNs}, 
year={2016}, 
pages={360-365}, 
abstract={Wireless sensor networks (WSNs) are the key enablers of the Internet of Things (IoT) paradigm. Traditionally, sensor network research has been to be unlike the internet, motivated by power and device constraints. The IETF 6LoWPAN draft standard changes this, defining how IPv6 packets can be efficiently transmitted over IEEE 802.15.4 radio links. Due to this 6LoWPAN technology, low power, low cost microcontrollers can be connected to the internet forming what is known as the Wireless embedded Internet. Another IETF recommendation, CoAP allows these devices to communicate interactively over the Internet. The integration of such tiny, ubiquitous electronic devices to the Internet enables interesting real-time applications. We evaluate the performance of a stack consisting of CoAP and 6LoWPAN over the IEEE 802.15.4 radio link using the Contiki OS and Cooja simulator, along with the CoAP framework Californium (Cf).}, 
keywords={IP networks;Internet of Things;Zigbee;access protocols;packet radio networks;wireless sensor networks;CoAP framework californium;Contiki OS;Cooja simulator;IEEE 802.15.4 radio links;IETF 6LoWPAN draft standard;IP based protocol stack;IPv6 packets;Internet of Things;IoT;WSN;performance analysis;ubiquitous electronic devices;wireless embedded Internet;wireless sensor networks;IEEE 802.15 Standard;IP networks;Internet of things;Protocols;Wireless sensor networks;6LoWPAN;Californium (Cf);CoAP;Contiki;Cooja}, 
doi={10.1109/INFCOMW.2016.7562102}, 
month={April},}
@INPROCEEDINGS{4228186, 
author={M. Cohen and T. Ponte and S. Rossetto and N. Rodriguez}, 
booktitle={2007 IEEE International Parallel and Distributed Processing Symposium}, 
title={Using Coroutines for RPC in Sensor Networks}, 
year={2007}, 
pages={1-8}, 
abstract={This paper proposes a concurrency model which integrates the asynchronous and event-driven nature of wireless sensor networks with higher-level abstractions that provide a more familiar programming style for the developer. As a basis for this proposal, we designed and implemented a cooperative multitasking scheduler, based on coroutines, for the TinyOS operating system. We then used this scheduler to implement RPC-like interfaces that capture different communication patterns common in wireless sensor networks. This allows the programmer to work, when appropriate, with a synchronous style, while maintaining an asynchronous model at the message exchange level.}, 
keywords={concurrency control;network operating systems;remote procedure calls;scheduling;wireless sensor networks;RPC coroutine;RPC-like interface;TinyOS operating system;concurrency model;cooperative multitasking scheduler;event-driven wireless sensor network;Computer languages;Concurrent computing;Embedded system;Multitasking;Operating systems;Programming profession;Proposals;Sensor phenomena and characterization;Testing;Wireless sensor networks}, 
doi={10.1109/IPDPS.2007.370458}, 
ISSN={1530-2075}, 
month={March},}
@ARTICLE{5492692, 
author={A. Bergel and W. Harrison and V. Cahill and S. Clarke}, 
journal={IEEE Transactions on Software Engineering}, 
title={FlowTalk: Language Support for Long-Latency Operations in Embedded Devices}, 
year={2011}, 
volume={37}, 
number={4}, 
pages={526-543}, 
abstract={Wireless sensor networks necessitate a programming model different from those used to develop desktop applications. Typically, resources in terms of power and memory are constrained. C is the most common programming language used to develop applications on very small embedded sensor devices. We claim that C does not provide efficient mechanisms to address the implicit asynchronous nature of sensor sampling. C applications for these devices suffer from a disruption in their control flow. In this paper, we present FlowTalk, a new object-oriented programming language aimed at making software development for wireless embedded sensor devices easier. FlowTalk is an object-oriented programming language in which dynamicity (e.g., object creation) has been traded for a reduction in memory consumption. The event model that traditionally comes from using sensors is adapted in FlowTalk with controlled disruption, a light-weight continuation mechanism. The essence of our model is to turn asynchronous long-latency operations into synchronous and blocking method calls. FlowTalk is built for TinyOS and can be used to develop applications that can fit in 4 KB of memory for a large number of wireless sensor devices.}, 
keywords={C language;embedded systems;intelligent sensors;object-oriented languages;object-oriented programming;software engineering;wireless sensor networks;C language;FlowTalk;TinyOS;asynchronous long-latency operations;embedded sensor devices;language support;light-weight continuation mechanism;memory consumption;memory size 4 KByte;object-oriented programming language;programming language;sensor sampling;wireless sensor networks;Application software;Automotive engineering;Biosensors;Computer languages;Embedded software;Java;Object oriented modeling;Object oriented programming;Sampling methods;Wireless sensor networks;Embedded systems;object-based programming.}, 
doi={10.1109/TSE.2010.66}, 
ISSN={0098-5589}, 
month={July},}
@INPROCEEDINGS{7371363, 
author={G. Ferro and R. Silva and L. Lopes}, 
booktitle={2015 IEEE 18th International Conference on Computational Science and Engineering}, 
title={Towards Out-of-the-Box Programming of Wireless Sensor-Actuator Networks}, 
year={2015}, 
pages={110-119}, 
abstract={We address the problem of providing users, namely non specialists, with out-of-the-box, programmable, Wireless Sensor-Actuator Networks (WSN). The idea is that users get a package containing a gateway and an undetermined number of nodes, pre-configured to work as a self-organized wireless mesh. Each node comes with two pre-installed components: a small operating system and a virtual machine. The user can then use a simple, domain-specific, programming language to implement periodic tasks that are compiled into byte-code, and can be sent to the nodes for execution. At the nodes, the operating system manages a task table and schedules non-preemptive tasks for execution using the virtual machine. No subtle hardware or software configuration is required from the user as these details are abstracted away by the virtual machine. We developed a full specification for a data-layer that follows the aforementioned guidelines and implemented a complete prototype, integrated in our own Publish/Subscribe middleware called SONAR. In this paper we report the first results of using the prototype as compared to using the low level programming tools provided with the hardware. We measure a small increase in both resource consumption and processing overhead suggesting that this data-layer can be used effectively in WSN, even in cases where nodes have very limited hardware resources.}, 
keywords={actuators;programming languages;virtual machines;wireless sensor networks;Publish/Subscribe middleware;SONAR;WSN;byte-code;gateway;level programming tools;operating system;out-of-the-box programming;programming language;virtual machine;wireless sensor-actuator networks;Logic gates;Operating systems;Programming;Sensors;Sonar;Virtual machining;Wireless sensor networks;Programming Language;Virtual Machine;Wireless Sensor Network}, 
doi={10.1109/CSE.2015.20}, 
month={Oct},}
@INPROCEEDINGS{7471346, 
author={M. P. Andersen and G. Fierro and D. E. Culler}, 
booktitle={2016 IEEE First International Conference on Internet-of-Things Design and Implementation (IoTDI)}, 
title={Enabling Synergy in IoT: Platform to Service and Beyond}, 
year={2016}, 
pages={1-12}, 
abstract={To enable a prosperous Internet of Things, devices and services must be extensible and adapt to changes in the environment or user interaction patterns. These requirements manifest as a set of design principles for each of the layers in an IoT ecosystem, from hardware to cloud services. This paper gives concrete guidelines learned from building a full-stack Synergistic IoT platform.}, 
keywords={Internet of Things;wireless sensor networks;Internet of Things;IoT synergy;synergistic IoT platform;user interaction pattern;Complexity theory;Context;Hardware;IEEE 802.15 Standard;Metadata;Protocols;Software;Internet of Things;Sensor motes;Wireless sensor networks}, 
doi={10.1109/IoTDI.2015.45}, 
month={April},}
@ARTICLE{7387670, 
author={M. Amjad and M. Sharif and M. K. Afzal and S. W. Kim}, 
journal={IEEE Sensors Journal}, 
title={TinyOS-New Trends, Comparative Views, and Supported Sensing Applications: A Review}, 
year={2016}, 
volume={16}, 
number={9}, 
pages={2865-2889}, 
abstract={The wireless sensor network (WSN) is an interesting area for modern day research groups. Tiny sensor nodes are deployed in a diversity of environments but with limited resources. Scarce resources compel researchers to employ an operating system that requires limited memory and minimum power. Tiny operating system (TinyOS) is a widely used operating system for sensor nodes, which provides concurrency and flexibility while adhering to the constraints of scarce resources. Comparatively, TinyOS is considered to be the most robust, innovative, energy-efficient, and widely used operating system in sensor networks. This paper looks at the state-of-the-art TinyOS and the different dimensions of its design paradigm, programming model, execution model, scheduling algorithms, concurrency, memory management, hardware support platforms, and other features. The addition of different features in TinyOS makes it the operating system of choice for WSNs. Sensing nodes with TinyOS seem to show more flexibility in supporting diverse types of sensing applications.}, 
keywords={systems software;wireless sensor networks;Tiny operating system;concurrency;design paradigm;execution model;hardware support platforms;memory management;programming model;scheduling algorithms;sensor nodes;wireless sensor network;Adaptation models;Concurrent computing;Instruction sets;Operating systems;Programming;Sensors;Wireless sensor networks;Wireless sensor networks;energy efficiency;operating system;sensor nodes},
doi={10.1109/JSEN.2016.2519924}, 
ISSN={1530-437X}, 
month={May},}
@INPROCEEDINGS{6842273, 
author={U. Cekmez and M. Ozsiginan and O. K. Sahingoz}, 
booktitle={2014 International Conference on Unmanned Aircraft Systems (ICUAS)}, 
title={A UAV path planning with parallel ACO algorithm on CUDA platform}, 
year={2014}, 
pages={347-354}, 
abstract={Solving the path planning problem of a UAV is a challenging issue especially if there are too many checkpoints to visit. Mainly, the brute force approach is used to find the shortest path in the mission area, which requires too many times to find a solution. Therefore, evolutionary algorithms and swarm intelligence techniques are used to find a feasible solution in an acceptable time. In this study, path planning problem of a UAV is solved by using a highly parallelized Ant Colony Optimization (ACO) algorithm on CUDA platform. The UAV path is constructed for disseminating keys and collecting data from a Wireless Sensor Network, which is previously defined. Due to its simplicity and effectiveness, ACO is selected as a path planning algorithm. However, ACO is not satisfactory if the mission area becomes large and there are an excessive number of checkpoints and/or additional constraints. In order to increase the performance, some parallelization techniques must be used in high performance computing platforms. GPU architecture has emerged as a powerful and low cost architecture for enabling impressive speedups for scientific calculations. Therefore, the parallel structure is constructed on CUDA architecture. The experimental results are compared with the CPU performance of the serial algorithm, and they clearly show that the proposed approach have a great potential for acceleration of ACO and allow to solve many complex tasks such as UAV path planning problem. We also present the execution results with different parameter values to expose the results for the researchers.}, 
keywords={ant colony optimisation;autonomous aerial vehicles;graphics processing units;mobile robots;parallel architectures;path planning;CUDA platform;GPU architecture;UAV path planning;ant colony optimization;brute force approach;compute unified device architecture;evolutionary algorithms;graphics processing units;parallel ACO algorithm;swarm intelligence techniques;unmanned aerial vehicle;wireless sensor network;Central Processing Unit;Cities and towns;Computer architecture;Graphics processing units;Instruction sets;Path planning;Planning}, 
doi={10.1109/ICUAS.2014.6842273}, 
month={May},}
@INPROCEEDINGS{4292873, 
author={M. Karpinski and V. Cahill}, 
booktitle={2007 4th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks}, 
title={High-Level Application Development is Realistic for Wireless Sensor Networks}, 
year={2007}, 
pages={610-619}, 
abstract={Programming wireless sensor network (WSN) applications is known to be a difficult task. Part of the problem is that the resource limitations of typical WSN nodes force programmers to use relatively low-level techniques to deal with the logical concurrency and asynchronous event handling inherent in these applications. In addition, existing general-purpose, node-level programming tools only support the networked nature of WSN applications in a limited way and result in application code that is hardly portable across different software platforms. All of this makes programming a single device a tedious and error-prone task. To address these issues we propose a high-level programming model that allows programmers to express applications as hierarchical state machines and to handle events and application concurrency in a way similar to imperative synchronous languages. Our program execution model is based on static scheduling what allows for standalone application analysis and testing. For deployment, the resulting programs are translated into efficient sequential C code. A prototype compiler for TinyOS has been implemented and its evaluation in described in this paper.}, 
keywords={C++ language;wireless sensor networks;TinyOS;asynchronous event handling;hierarchical state machines;high-level application development;high-level programming model;logical concurrency;node-level programming tools;nodes force programmers;resource limitations;sequential C code;software platforms;synchronous languages;wireless sensor networks;Application software;Computer languages;Computer science;Concurrent computing;Hardware;Operating systems;Peer to peer computing;Programming profession;Prototypes;Wireless sensor networks}, 
doi={10.1109/SAHCN.2007.4292873}, 
ISSN={2155-5486}, 
month={June},}
@ARTICLE{7374832, 
author={J. Herbert and S. Wilson and A. D. Rakic and T. Taimre}, 
journal={Electronics Letters}, 
title={FPGA implementation of a high-speed, real-time, windowed standard deviation filter}, 
year={2016}, 
volume={52}, 
number={1}, 
pages={22-23}, 
abstract={Characterisation of the standard deviation of a time-series signal has uncommon, yet widespread applications. The usual requirement for a representation of signal standard deviation in real-time implies a high computation speed. A method based on a field programmable gate array (FPGA) implementation is presented. The technique is benchmarked against conventional computational approaches and shows a single windowed standard deviation update calculation of a 16 bit sample can be achieved in 11 ns on a modern CPU. The FPGA implementation is found to be superior to all other approaches examined with an operation time of below 10 ns, and thus provides a useful tool for the real-time measurement of the standard deviation of signals above 100 MHz.}, 
keywords={field programmable gate arrays;filters;time series;FPGA;field programmable gate array;modern CPU;time-series signal;windowed standard deviation filter;word length 16 bit}, 
doi={10.1049/el.2015.2407}, 
ISSN={0013-5194}, 
month={},}