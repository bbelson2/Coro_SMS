% Encoding: UTF-8
ï»¿

@InProceedings{ISI:000278047600001,
  author    = {Ierusalimschy, Roberto},
  title     = {{Programming with Multiple Paradigms in Lua}},
  booktitle = {{FUNCTIONAL AND CONSTRAINT LOGIC PROGRAMMING}},
  year      = {{2010}},
  editor    = {{Escobar, S}},
  volume    = {{5979}},
  series    = {{Lecture Notes in Computer Science}},
  pages     = {{1-12}},
  note      = {{18th International Workshop on Functional and Constraint Logic Programming, Brasilia, BRAZIL, JUN 28, 2009}},
  abstract  = {{Lua is a scripting language used in many industrial applications, with
   an emphasis on embedded systems and games. Two key points in the design
   of the language that led to its widely adoption are flexibility and
   small size. To achieve these two conflicting goals, the design
   emphasizes the use of few but powerful mechanisms, such as first-class
   functions, associative arrays, coroutines, and reflexive capabilities.
   As a consequence of this design, although Lua is primarily a procedural
   language, it is frequently used in several different programming
   paradigms, such as functional, object-oriented, goal-oriented, and
   concurrent programming, and also for data description.
   In this paper we discuss what mechanisms Lua features to achieve its
   flexibility and how programmers use them for different paradigms.}},
  db        = {WebOfScience},
  isbn      = {{978-3-642-11998-9}},
  issn      = {{0302-9743}},
  unique-id = {{ISI:000278047600001}},
}

@InProceedings{ISI:000392002600037,
  author       = {Saeedloei, Neda},
  title        = {{LOGIC PROGRAMMING FOUNDATIONS OF CYBER-PHYSICAL SYSTEMS}},
  booktitle    = {{TECHNICAL COMMUNICATIONS OF THE 26TH INTERNATIONAL CONFERENCE ON LOGIC PROGRAMMING (ICLP'10)}},
  year         = {{2010}},
  editor       = {{Hermenegildo, M and Schaub, T}},
  volume       = {{7}},
  series       = {{Leibniz International Proceedings in Informatics}},
  pages        = {{289-293}},
  organization = {{Assoc Log Programming, Execut Comm; Log Programming Comm; EPSRC; NSF; Microsoft Res; Assoc Symbol Log; Google; HP; Intel}},
  note         = {{26th International Conference on Logic Programming (ICLP), Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND, JUL 16-19, 2010}},
  abstract     = {{Cyber-physical systems (CPS) are becoming ubiquitous. Almost every
   device today has a controller that reads inputs through sensors, does
   some processing and then performs actions through actuators. These
   controllers are discrete digital systems whose inputs are continuous
   physical quantities and whose outputs control physical (analog) devices.
   Thus, CPS involve both digital and analog data. In addition, CPS are
   assumed to run forever, and many CPS may run concurrently with each
   other. we will develop techniques for faithfully and elegantly modeling
   CPS. Our approach is based on using constraint logic programming over
   reals, co-induction, and coroutining.}},
  db           = {WebOfScience},
  doi          = {10.4230/LIPIcs.ICLP.2010.289},
  isbn         = {{978-3-939897-17-0}},
  issn         = {{1868-8969}},
  unique-id    = {{ISI:000392002600037}},
}

@Comment{jabref-meta: databaseType:bibtex;}
