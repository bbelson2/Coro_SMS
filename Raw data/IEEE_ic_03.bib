@INPROCEEDINGS{6690509, 
author={A. V. Brito and A. V. Negreiros and C. Roth and O. Sander and J. Becker}, 
booktitle={2013 IEEE/ACM 17th International Symposium on Distributed Simulation and Real Time Applications}, 
title={Development and Evaluation of Distributed Simulation of Embedded Systems Using Ptolemy and HLA}, 
year={2013}, 
pages={189-196}, 
abstract={Nowadays, embedded systems have a huge amount of computational power and consequently, high complexity. It is quite usual to find different applications being executed in embedded systems. Embedded system design demands for method and tools that allow the simulation and verification in an efficient and practical way. This paper proposes the development and evaluation of a solution for embedded modeling and simulation of heterogeneous Models of Computation (MoCs) in a distributed way by the integration of Ptolemy II and the High Level Architecture (HLA), a middleware for distributed discrete event simulation, in order to create an environment with high-performance execution of large-scale heterogeneous models. Experimental results demonstrate, that the use of a non distributed simulation for some situations can be infeasible, as well as the use of distributed simulation with few machines, like one, two or three computers. It was demonstrated that a speedup of factor 4 was acquired when a model with 4,000 thousands actors were distributed in 8 different machines.}, 
keywords={discrete event simulation;embedded systems;middleware;HLA;MoC;Ptolemy II;computational power;distributed discrete event simulation;embedded modeling and simulation;embedded systems;heterogeneous models of computation;high level architecture;high-performance execution;large-scale heterogeneous models;middleware;nondistributed simulation;Computational modeling;Computer architecture;Embedded systems;Ports (Computers);Sensors;Unified modeling language;Wireless sensor networks;Distributed Simulation;Embedded Systems;Heterogeneous Simulation}, 
doi={10.1109/DS-RT.2013.28}, 
ISSN={1550-6525}, 
month={Oct},}
@INPROCEEDINGS{6473629, 
author={Â. L. V. d. Negreiros and A. V. Brito}, 
booktitle={2012 Brazilian Symposium on Computing System Engineering}, 
title={The Development of a Methodology with a Tool Support to the Distributed Simulation of Heterogeneous and Complexes Embedded Systems}, 
year={2012}, 
pages={37-42}, 
abstract={Nowadays, embedded systems contains a big computational power and consequently a big complexity. It is very common to find different kinds of applications being executed in embedded systems. With this scenario, it is necessary some method and/or tool that allows the simulation of those systems in an efficient and practice way. The goal of this paper is to expose the integration between Ptolemy II and HLA in order to enable the elaboration of one methodology, with a tool support, to model and simulate large scale heterogeneous embedded systems.}, 
keywords={computational complexity;digital simulation;embedded systems;HLA;Ptolemy II;big complexity;complexes embedded systems;computational power;distributed simulation;large scale heterogeneous embedded systems;tool support;Computational modeling;Computer architecture;Embedded systems;Hardware;Integrated circuit modeling;Mathematical model;Unified modeling language;Distributed Simulation;HLA;Heterogeneous Systems;High Level Architecture;Ptolemy}, 
doi={10.1109/SBESC.2012.16}, 
ISSN={2324-7886}, 
month={Nov},}
@INPROCEEDINGS{6825342, 
author={A. V. Brito and A. V. Negreiros}, 
booktitle={2013 III Brazilian Symposium on Computing Systems Engineering}, 
title={Allowing Large-Scale Systems Evaluation with Ptolemy through Distributed Simulation}, 
year={2013}, 
pages={53-58}, 
abstract={Nowadays, embedded systems have a huge amount of computational power and consequently, high complexity. It is quite usual to find different applications being executed in embedded systems. Embedded system design demands for method and tools that allow the simulation and verification in an efficient and practical way. This paper proposes the development and evaluation of a solution for embedded modeling and simulation of embedded systems in a distributed way by the integration of Ptolemy II and the High Level Architecture (HLA), in order to create an environment with high-performance execution of large-scale models. Experimental results demonstrated that the use of a non distributed simulation for some situations can be infeasible. It was demonstrated that a speedup of factor 4 was acquired when a model with 4,000 thousands actors were distributed in 8 different machines. It also presented a model of execution of each CPU core during the simulation.}, 
keywords={digital simulation;embedded systems;telecommunication computing;wireless sensor networks;CPU core;HLA;Ptolemy II;embedded modeling;embedded simulation;embedded system design;high level architecture;high-performance execution;large-scale models;large-scale systems evaluation;nondistributed simulation;wireless sensor network;Computational modeling;Computer architecture;Embedded systems;Graphics;Unified modeling language;Wireless sensor networks;Distributed Simulation;Embedded Systems;Heterogeneous Simulation}, 
doi={10.1109/SBESC.2013.19}, 
ISSN={2324-7886}, 
month={Dec},}
@INPROCEEDINGS{6064506, 
author={E. A. Lee}, 
booktitle={2011 Proceedings of the Ninth ACM International Conference on Embedded Software (EMSOFT)}, 
title={Heterogeneous actor modeling}, 
year={2011}, 
pages={3-12}, 
abstract={Complex systems demand diversity in the modeling mechanisms. This “roadmap” paper prescribes an approach to modeling based on concurrent communicating components (called actors), where a diversity of orchestration strategies govern the execution and interaction of the components. The prescribed approach has been extensively explored in the Ptolemy Project, but as yet is not widely deployed in engineering practice. The approach achieves interaction between diverse models using an abstract semantics, which is a deliberately incomplete semantics that cannot by itself define a useful modeling framework. It instead focuses on the interactions between diverse models, reducing the nature of those interactions to a minimum that achieves a well-defined composition. The actor semantics is an abstract semantics that can handle many heterogeneous models that are built today, and some that are not common today. The actor abstract semantics and many concrete semantics are implemented in Ptolemy II, an open-source software framework.}, 
keywords={large-scale systems;multiprocessing programs;public domain software;Ptolemy project;abstract semantics;actor semantics;complex systems;concurrent communicating components;heterogeneous actor modeling;modeling mechanisms;open-source software;orchestration strategies;roadmap;Adaptation models;Computational modeling;Mathematical model;Object oriented modeling;Semantics;Syntactics;Unified modeling language;Ptolemy;heterogeneity;models of computation}, 
doi={10.1145/2038642.2038646}, 
month={Oct},}
@INPROCEEDINGS{7345624, 
author={E. Rakadjiev and T. Shimosawa and H. Mine and S. Oshima}, 
booktitle={2015 IEEE Trustcom/BigDataSE/ISPA}, 
title={Parallel SMT Solving and Concurrent Symbolic Execution}, 
year={2015}, 
volume={3}, 
pages={17-26}, 
abstract={Satisfiability Modulo Theories (SMT) solving is a fundamental tool in numerous areas of computer science, where problems are expressed as logical formulas whose satisfiability has to be decided. State-of-the-art solvers can handle many real-world problems efficiently, however, SMT solving is an NP-hard problem, and the strong reliance on the solvers typically makes them the dominating performance hot spot of the systems utilizing them. Symbolic execution is a software analysis method used for automated high-coverage test generation, among others. It relies heavily on SMT solving and spends substantial amount of its run time, commonly more than 90%, in solver activities. In this paper, we investigate how symbolic execution can benefit from the use of general-purpose, parallel SMT solving. We present design, prototypical implementation, and evaluation of a linearly scalable SMT solver cluster and an extension of the KLEE symbolic execution engine, offering concurrent execution and asynchronous constraint solving. We show that, depending on the characteristics of the program being analyzed, KLEE's performance is improved by up to 7.6x with the help of our approach.}, 
keywords={computability;computational complexity;concurrency control;constraint handling;parallel processing;program diagnostics;KLEE symbolic execution engine;NP-hard problem;asynchronous constraint solving;automated high-coverage test generation;concurrent symbolic execution;linearly scalable SMT solver cluster;logical formulas;parallel SMT solving;satisfiability modulo theories;software analysis method;Computer science;Concurrent computing;Data structures;Explosions;Scalability;Search problems;Software;Asynchronous SMT Solving;Concurrent Symbolic Execution;Distributed SMT Solving;Parallel SMT Solving;SMT Solving;Symbolic Execution}, 
doi={10.1109/Trustcom.2015.608}, 
month={Aug},}
@INPROCEEDINGS{6549920, 
author={E. Pereira and C. Potiron and C. M. Kirsch and R. Sengupta}, 
booktitle={2013 IEEE International Systems Conference (SysCon)}, 
title={Modeling and controlling the structure of heterogeneous mobile robotic systems: A bigactor approach}, 
year={2013}, 
pages={442-447}, 
abstract={In this paper we address the problem of modelling and controlling heterogeneous mobile robotic systems at a structure-level abstraction. We consider a system of mobile robotic entities that are able to observe, control, compute, and communicate. They operate upon an abstraction of the structure of the world that entails location and connectivity as first-class concepts. Our approach is to model mobile robotic entities as bigActors [18], a model of computation that combines bigraphs with the actor model for modeling structure-aware computation. As case study, we model a mission of heterogeneous unmanned vehicles performing an environmental monitoring mission.}, 
keywords={mobile robots;BigActor approach;heterogeneous mobile robotic system;heterogeneous unmanned vehicle;structure-aware computation;structure-level abstraction;Computational modeling;Mathematical model;Mobile communication;Robots;Semantics;Vehicles}, 
doi={10.1109/SysCon.2013.6549920}, 
month={April},}
@INPROCEEDINGS{5751519, 
author={C. Brooks and E. A. Lee and S. Tripakis}, 
booktitle={2010 IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS)}, 
title={Exploring models of computation with Ptolemy II}, 
year={2010}, 
pages={331-332}, 
abstract={The Ptolemy project studies modeling, simulation, and design of concurrent, real-time, embedded systems. The focus is on assembly of concurrent components. The key underlying principle in the project is the use of well-defined models of computation that govern the interaction between components. A major problem area being addressed is the use of heterogeneous mixtures of models of computation. Ptolemy II takes a component view of design, in that models are constructed as a set of interacting components. A model of computation governs the semantics of the interaction, and thus imposes an execution-time discipline. Ptolemy II has implementations of many models of computation including Synchronous Data Flow, Kahn Process Networks, Discrete Event, Continuous Time, Synchronous/Reactive and Modal Models This hands-on tutorial explores how these models of computation are implemented in Ptolemy II and how to create new models of computation such as a "non-dogmatic" Process Networks example and a left-to-right execution policy example.}, 
keywords={embedded systems;object-oriented methods;public domain software;Kahn process networks;Ptolemy II;concurrent embedded systems;continuous time models;discrete event models;execution time discipline;left-to-right execution policy;modal models;non dogmatic process networks;real time embedded systems;synchronous data flow;synchronous-reactive models;Computational modeling;Data models;Object oriented modeling;Real time systems;Semantics;Software;Tutorials;Modeling;concurrency;simulation}, 
doi={10.1145/1878961.1879020}, 
month={Oct},}
@INPROCEEDINGS{6843715, 
author={R. Mancuso and O. D. Dantsker and M. Caccamo and M. S. Selig}, 
booktitle={2014 ACM/IEEE International Conference on Cyber-Physical Systems (ICCPS)}, 
title={A low-power architecture for high frequency sensor acquisition in many-DOF UAVs}, 
year={2014}, 
pages={103-114}, 
abstract={Unmanned Aerial Vehicles (UAVs) are becoming increasingly popular thanks to an increase in the accessibility of components with high reliability and reduced cost, making them suitable for civil, military and research purposes. Vehicles classified as UAVs can have largely different properties in terms of physical design, size, power, capabilities, as well as associated production and operational cost. In this work, we target UAVs that feature a high number of degrees of freedom (DOF) and that are instrumented with a large number of sensors. For such platforms, we propose an architecture to perform data acquisition from on-board instrumentation at a frequency (100 Hz) that is twice as fast as existing products. Our architecture is capable of performing acquisition with strict timing constraints, thus, the produced data stream is suitable for performing real-time sensor fusion. Furthermore, our architecture can be implemented using embedded, commercial hardware, resulting in a low-cost solution. Finally, the resulting data acquisition unit features a low-power consumption, allowing it to operate for two to three hours with a miniature battery.}, 
keywords={autonomous aerial vehicles;data acquisition;mobile robots;sensor fusion;data stream;degrees-of-freedom;frequency 100 Hz;high frequency sensor acquisition;low-power architecture;manyDOF UAV;miniature battery;sensor fusion;timing constraints;unmanned aerial vehicles;Data acquisition;Hardware;Magnetic separation;Magnetometers;Magnetosphere;Monitoring;Pulse width modulation}, 
doi={10.1109/ICCPS.2014.6843715}, 
month={April},}
@INPROCEEDINGS{7460722, 
author={M. P. Andersen and G. Fierro and D. E. Culler}, 
booktitle={2016 15th ACM/IEEE International Conference on Information Processing in Sensor Networks (IPSN)}, 
title={System Design for a Synergistic, Low Power Mote/BLE Embedded Platform}, 
year={2016}, 
pages={1-12}, 
abstract={Modern IoT prototyping platforms fall short in terms of energy efficiency, connectivity and software programming practices. We present the design of a new hardware and software platform that addresses these shortcomings by bringing together Mobile, Wearable, Maker and Wireless Sensor Network technologies to enable rapid prototyping with a high degree of synergy and energy efficiency. This is achieved in part by leveraging the Memory Protection Unit on modern microcontrollers along with a novel syscall interface to provide kernel / user isolation and a clean concurrency model. Such a design allows a wide range of languages to be used for application development without significant adaptation. We demonstrate how careful choice of application language allows the naturally asynchronous nature of embedded programming to be expressed cleanly and powerfully. Finally we evaluate the platform in several integrated use cases, providing examples of the capabilities introduced by Synergy.}, 
keywords={concurrency (computers);embedded systems;microcontrollers;clean concurrency model;embedded programming;low power mote-BLE embedded platform;memory protection unit;microcontrollers;mobile network technologies;rapid prototyping;syscall interface;wearable technologies;wireless sensor network technologies;Hardware;IEEE 802.15 Standard;Microcontrollers;Software;Storms;Technological innovation;Wireless sensor networks}, 
doi={10.1109/IPSN.2016.7460722}, 
month={April},}
@ARTICLE{7387670, 
author={M. Amjad and M. Sharif and M. K. Afzal and S. W. Kim}, 
journal={IEEE Sensors Journal}, 
title={TinyOS-New Trends, Comparative Views, and Supported Sensing Applications: A Review}, 
year={2016}, 
volume={16}, 
number={9}, 
pages={2865-2889}, 
abstract={The wireless sensor network (WSN) is an interesting area for modern day research groups. Tiny sensor nodes are deployed in a diversity of environments but with limited resources. Scarce resources compel researchers to employ an operating system that requires limited memory and minimum power. Tiny operating system (TinyOS) is a widely used operating system for sensor nodes, which provides concurrency and flexibility while adhering to the constraints of scarce resources. Comparatively, TinyOS is considered to be the most robust, innovative, energy-efficient, and widely used operating system in sensor networks. This paper looks at the state-of-the-art TinyOS and the different dimensions of its design paradigm, programming model, execution model, scheduling algorithms, concurrency, memory management, hardware support platforms, and other features. The addition of different features in TinyOS makes it the operating system of choice for WSNs. Sensing nodes with TinyOS seem to show more flexibility in supporting diverse types of sensing applications.}, 
keywords={systems software;wireless sensor networks;Tiny operating system;concurrency;design paradigm;execution model;hardware support platforms;memory management;programming model;scheduling algorithms;sensor nodes;wireless sensor network;Adaptation models;Concurrent computing;Instruction sets;Operating systems;Programming;Sensors;Wireless sensor networks;Wireless sensor networks;energy efficiency;operating system;sensor nodes},
doi={10.1109/JSEN.2016.2519924}, 
ISSN={1530-437X}, 
month={May},}
@ARTICLE{7513207, 
author={L. Li and D. Li and Z. Su and L. Jin and G. Huang}, 
journal={China Communications}, 
title={Performance analysis and framework optimization of open source cloud storage system}, 
year={2016}, 
volume={13}, 
number={6}, 
pages={110-122}, 
abstract={More and more embedded devices, such as mobile phones, tablet PCs and laptops, are used in every field, so huge files need to be stored or backed up into cloud storage. Optimizing the performance of cloud storage is very important for Internet development. This paper presents the performance evaluation of the open source distributed storage system, a highly available, distributed, eventually consistent object/blob store from OpenStack cloud computing components. This paper mainly focuses on the mechanism of cloud storage as well as the optimization methods to process different sized files. This work provides two major contributions through comprehensive performance evaluations. First, it provides different configurations for OpenStack Swift system and an analysis of how every component affects the performance. Second, it presents the detailed optimization methods to improve the performance in processing different sized files. The experimental results show that our method improves the performance and the structure. We give the methods to optimize the object-based cloud storage system to deploy the readily available storage system.}, 
keywords={cloud computing;public domain software;software performance evaluation;storage management;Internet development;OpenStack Swift system;OpenStack cloud computing components;comprehensive performance evaluations;embedded devices;framework optimization;object-based cloud storage system;open source cloud storage system;open source distributed storage system;optimization methods;performance analysis;Cloud computing;File systems;Hard disks;Optimization;Performance evaluation;Servers;Cloud Computing;Distribute System;Object Storage;OpenStack Swift;Storage Service Optimization}, 
doi={10.1109/CC.2016.7513207}, 
ISSN={1673-5447}, 
month={June},}
@INPROCEEDINGS{7173939, 
author={M. Hölzl and T. Gabor}, 
booktitle={2015 IEEE/ACM 1st International Workshop on Software Engineering for Smart Cyber-Physical Systems}, 
title={Continuous Collaboration: A Case Study on the Development of an Adaptive Cyber-physical System}, 
year={2015}, 
pages={19-25}, 
abstract={The need to interact with complex environments that are often not well understood at design time makes the development of smart cyber-physical systems (sCPS) a challenging endeavor. We propose a set of practices and tools that support the design and implementation of sCPS using continuous collaboration -- a development lifecycle and architecture to continuously incorporate data gained from the operation of the sCPS into the system. Continuous collaboration attempts to harmonize three interlocking feedback cycles: refinement of the system design by the developers, autonomous evolution of agents in the sCPS, and feedback from the evolving system to the developers. To support the process we introduce tools and techniques that we have found helpful to realize continuous collaboration: The HADES/Hexameter platform, extended behavior trees and the teacher/student learning pattern.}, 
keywords={software architecture;HADES-Hexameter platform;adaptive cyber-physical system;complex environments;continuous collaboration;extended behavior trees;interlocking feedback cycles;sCPS;software architecture;software development lifecycle approach;system design;teacher-student learning pattern;Collaboration;Cyber-physical systems;Hardware;Navigation;Rescue robots;Software;Cyber-Physical Systems;Embodied Evolution;Evolutionary Algorithms;Reinforcement Learning;Software Engineering}, 
doi={10.1109/SEsCPS.2015.12}, 
month={May},}
@INPROCEEDINGS{7925596, 
author={C. Shen and S. Chen}, 
booktitle={2017 IEEE Wireless Communications and Networking Conference (WCNC)}, 
title={A Cyber-Physical Design for Indoor Temperature Monitoring Using Wireless Sensor Networks}, 
year={2017}, 
pages={1-6}, 
abstract={Indoor temperature monitoring using wireless sensor networks is critical in many applications. For example, in data centers, it is important to monitor if the indoor temperature is within certain range so that the computers can function with near-optimal performance. In contrast to existing research that often separates the sensor network design and the measured temperature, this paper proposes a cyber-physical design approach to monitor the indoor temperature using wireless sensor networks. The source sensor wakes up and senses the temperature periodically using sleep#x002F;wake duty cycles and sends the data to the destination via multi-hop relaying nodes in an anycast way. Moreover, the period of sleep#x002F;wake duty cycle is dynamically adjusted based on the sensed temperature: when the measured temperature is normal, the sensor nodes wake up infrequently for better energy efficiency; as the sensed temperature approaches a pre-determined threshold, the sensor nodes wake up more frequently to avoid any delayed alarm trigger. The proposed design is implemented using TelosB with TinyOS, and experiments confirm that the cyber-physical system reports the alarm with a very small delay while achieving high long-term energy efficiency.}, 
keywords={computerised monitoring;cyber-physical systems;temperature sensors;wireless sensor networks;cyber-physical design;energy efficiency;indoor temperature monitoring;multihop relaying nodes;source sensor;wireless sensor networks;Monitoring;Protocols;Relays;Temperature distribution;Temperature measurement;Temperature sensors;Wireless sensor networks}, 
doi={10.1109/WCNC.2017.7925596}, 
month={March},}